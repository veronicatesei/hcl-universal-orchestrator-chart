######################################################################
# Licensed Materials Property of HCL*
# (c) Copyright HCL Technologies Ltd. 2020, 2023. All rights reserved.
#
# * Trademark of HCL Technologies Limited
######################################################################

# Url of flexera license server
hclFlexnetURL:
# Id of flexera license instance
hclFlexnetID:

global:
# enableConsole enables and disables the Dynamic Workload Console deployment. Supported values are true and false.
# enableConsole: false
  # debug enables and disables the debugging mode. Supported values are true and false.
  debug: false
  
  # license indicates whether you accept the license. Supported values are accept and not accepted. Mandatory parameter.
  license: "not accepted"
  # serviceAccountName is the name of a custom service account to be used for deployments, for example to deploy HCL Workload Automation.
  serviceAccountName:
  # configPlugins is the ConfigMap containing list of plugin to be installed.
  configPlugins: 
  # pluginImageRepository is the name of the repository that contains the image with tags for Automation Hub integrations.
  pluginImageRepository: hclcr.io/wa
  # pluginImageName is the name of the image with tags for Automation Hub integrations.
  pluginImageName: hcl-workload-automation-plugins:10.2.1.00.20231201
  # extraImageRepository is the name of the repository that contains the image with tags containing OCLI and agent for download from Dynamic Workload Console or engine.
  extraImageRepository: 
  # extraImageName is the name of the image with tags containing OCLI and agent for download from Dynamic Workload Console or engine.
  extraImageName: hclcr.io/uno/hcl-uno-external-pod:1.1.1.0
  customLabels:
    - name: "environment"
      value: "prod"
  customPodAnnotations:
    env.name: "" 
  customEnv:
  #- name: "MY_ENVKEY"
  #  value: "MY_EN_VALUE"
  #enableTestPrereq: true
  # Hcl additional imagePullSecret to add to service account
  hclImagePullSecret:
# nameOverride changes the resources names. By default, the release name is used.
nameOverride: ""

database:
  # url is the URL of the database. Mandatory parameter.
  url: mongodb://hcl-uno-db-mongodb.db.svc.cluster.local:27017
  # type is the type of the database. Supported value is mongodb.
  type: mongodb
  # databaseName is the name of the database.
  databaseName: uno
  # username is the name of the database user. Mandatory parameter.
  username: 
  # password is the password of the database user. Mandatory parameter.
  password:
  # tls specifies whether TLS is enabled. Supported values are true and false.
  tls: false
  # tlsInsecure specifies whether certificate validation must be skipped. Supported values are true and false.
  tlsInsecure: false

kafka:
  # url is the URL of the event streaming platform. Mandatory parameter.
  url: hcl-uno-kafka-0.kafka-headless.kafka.svc.cluster.local:9092
  # username is the name of the kafka user. Mandatory parameter.
  username: 
  # password is the password of the kafka user. Mandatory parameter.
  password:
  # tls specifies whether TLS is enabled. Supported values are true and false.
  tls: false
  # tlsInsecure specifies whether certificate validation must be skipped. Supported values are true and false.
  tlsInsecure: false
  # Kafka sasl mechanism as kafka client configuration provides.
  saslMechanism:
  # Kafka jass config as kafka client configuration provides.
  jaasConfig:
  # Kafka security protocol as kafka client configuration provides.
  securityProtocol:
  #kerberos service name
  kerberosServiceName:
    
eventmanager:
  plugins:
    gcp:
      baseServicePath:

config:
  license:
    # Url of flexera license server
    licenseServerUrl: 
    # Id of flexera license instance
    licenseServerId:

  registry:
    # name is the name of your registry.
    name:  hclcr.io/uno
    # pullPolicy defines when data is pulled from your event streaming platform. Supported values are Always, Never, IfNotPresent.
    pullPolicy: Always
    # tag is the tag of the image. The default value is latest.
    tag: 1.1.1.0
  planning:
    # max number of days to generate not active instance
    notActiveWindowMax: P9DT0H
    # min number of days to generate not active instance
    notActiveWindowMin: P7DT0H
    # Frequency to activate not active instances
    activeWindowExtension: PT5M
    # How long is the windows of active instance (how long the plan is)
    activeWindow: PT24H
    # How long is the windows of plan in the past
    daysRetentionPlan: P7DT0H
  console:
    # hostname is the hostname of the Dynamic Workload Console.
    hostname:
    # port is the port of the Dynamic Workload Console.
    port:

  certificates:
    # useCustomizedCert specifies if you use custom certificates or certificates generated by cert-manager. Supported values are true and false. If you set it to false, certificates are defined by the deployment process. If you set it to true, provide the required certificates and customize the parameters listed below. 
    useCustomizedCert: false
    # caPairSecretName is the name of the pair secret. This parameter applies if you set useCustomizedCert to true.
    caPairSecretName: ca-key-pair
    # certSecretName is the name of the secret. This parameter applies if you set useCustomizedCert to true.
    certSecretName: uno-certificate
    # certExtAgtSecretName is the name of the secret of the external agent. This parameter applies if you set useCustomizedCert to true.
    certExtAgtSecretName: uno-certificate-ext-agt
    # duration is the duration of the certificates before they are set to expire. This parameter applies if you set useCustomizedCert to true.
    duration: 2160h
    # renewBefore is the time before the certificate expires when the certificate manager service begins attempts to renew the certificate. This parameter applies if you set useCustomizedCert to true.
    renewBefore: 360h
    # organization is the organization label within the certificates. This parameter applies if you set useCustomizedCert to true.
    organization: hcl
    # additionalCASecrets contains additional secrets, for example to trust MongoDb or Kafka certificates. This parameter applies if you set useCustomizedCert to true.
    additionalCASecrets: 
    #  - secretname1

  apiKey:
    # lifespanWarningDays specifies how many days before API Key expiration you are notified about it.
    lifespanWarningDays: 5 
    # apikeyPersonalExpirationDuration is the amount of time on or after which the Personal API Keys expire. It is calculated starting from API Key creation.
    apikeyPersonalExpirationDuration: P365D
    # apikeyServiceExpirationDuration is the amount of time on or after which the Service API Keys expire. It is calculated starting from API Key creation.
    apikeyServiceExpirationDuration: P365D
    # groupsCacheExpirationDuration is the amount of time on or after which users must login again to the authentication provider to use Personal API Keys.
    groupsCacheExpirationDuration: P30D
    # cleanupFrequencyForPending indicates how often the IAA service checks in the database for API Keys whose token has not been created after the cleanupFrequencyForPending timeout has expired. 
    cleanupFrequencyForPending: PT1M
    # cleanupTimeoutForPending indicates the amount of time after which API Keys must be deleted if the related token has not been created. The maximum supported value is 1 day.
    cleanupTimeoutForPending: PT15M # Maximum allowed value is 1d

  jwt:
    # jwtSecretName is the name of your custom Kubernetes secret used to sign JWTs.
    jwtSecretName:
    # internalExpirationDuration is the amount of time on or after which the internal JWT expires.
    internalExpirationDuration: PT10M

  tracing:
    # enabled specifies whether tracing is enabled. Supported value are true and false.
    enabled: true
    # otelEndpoint is the endpoint to which OpenTelemetry traces are sent.
    otelEndpoint: "http://simplest-collector.default:4317/api/traces"
    # traceAll specifies whether all events are traced. Supported value are true and false. If you set it to true, also internal calls are traced.
    traceAll: false

authentication:
  #apiHostname specifies the API gateway hostname and is used only when ingress.enabled is set to false.
  apiHostname: "gateway"
  oidc:
    # connectionTimeout is the amount of time on or after which connection to OIDC provider goes in timeout.
    connectionTimeout: PT1M
    # enabled specifies whether authentication through OpenID Connect (OIDC) server is enabled. 
    # If enabled is set to false, the other properties in this section are ignored.
    enabled: false
    # useToManageApiKeys specifies whether the OpenID Connect (OIDC) server must be used in place of the Dynamic Workload Console to manage API keys (for example, when authentication information expires).
    # Supported values are true and false. 
    useToManageApiKeys: false
    # server is the base URL of the OpenID Connect (OIDC) server. This parameter applies when enabled is set to true.
    server: "https://uno-keycloak-ssl:8843/realms/uno"
    # clientId is the client-id of the application in the OpenID Connect (OIDC) server. This parameter applies when enabled is set to true.
    clientId: "uno-service"
    # credentialSecret is the client secret which is used for a client_secret_basic authentication with OpenID Connect (OIDC) server. This parameter applies when enabled is set to true.
    credentialSecret: "put_oidc_secret_here"
    # encryptTokensInCookie enables the encryption of the tokens before being stored in the cookies. This parameter applies when enabled is set to true.
    encryptTokensInCookie: true
    # splitTokensInCookie set false to keep all OIDC-related tokens (ID, access and refresh) in a single session cookie. Set true to minimize session cookie size. This parameter applies when enabled is set to true
    splitTokensInCookie: true
    # tlsVerification  enables certificate validation and hostname verification. Supported values are “none”, “required”, “certificate-validation”. This parameter applies when enabled is set to true
    tlsVerification: "none"
    # applicationType is the application type. Supported values are “web-app”, “service”, “hybrid”. This parameter applies when enabled is set to true.
    applicationType: "web-app"

# bulkhead defines the policy to be used on the gateway endpoint for avoiding bulk requests and block DDOS attacks against these contexts.
bulkhead:
  request:
    # maxValue defines the maximum number of concurrent calls to an instance. The value must be greater than 0.
    maxValue: 12
    # waitingTaskQueue defines the maximum number of calls which can be kept waiting in each queue. The value must be greater than 0.
    waitingTaskQueue: 12

ingress:
  # enabled specifies whether an ingress is enabled to route traffic from external sources to the applications in the cluster. Supported values are true and false.
  enabled: true
  # ingressClassName is a unique identifier for the ingress controller.
  ingressClassName: nginx
  # baseDomainName is the name of the base domain for using the ingress controller. This parameter applies if you set enabled to true.
  baseDomainName: ".k8s.uat.uno"
  annotations: 
    # For more information, see the ingress controller documentation.
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #    secretName is the name of the secret.
  #  - secretName: chart-example-tls
  #    hosts specifies the names of the hosts to which the secret applies.
  #    hosts:
  #      - chart-example.local


deployment:
  global:
    # debug enables and disables the debugging mode. Supported values are true and false.
    debug: false
    # minTargetReplicas is the minimum number of target replicas to be deployed for each microservice.
    minTargetReplicas: 1
    # maxTargetReplicas is the maximum number of target replicas to be deployed for each microservice.
    maxTargetReplicas: 3
    # traceLevel specifes the trace detail level for trace.log. Supported values are ALL,FINE,INFO.
    traceLevel: "FINE"
    autoscaler:
      # cpuAverageUtilization specifies the average usage of CPU which starts the autoscaler.
      cpuAverageUtilization: 200
    resources:
      limits:
        # cpu is the maximum amount of cpu services can use.
        cpu: "2"
        # memory is the maximum amount of memory services can use.
        memory: "1024Mi"
      requests:
        # cpu is the minimum amount of cpu services require to run.
        cpu: "0.3"
        # memory is the minimum amount of memory services require to run.
        memory: "512Mi"
  # The properties listed below apply to single microservices. You can use them to override the global settings defined above for one or more microservices.
  agentmanager:
    # ingressPrefix is the prefix of the name of the endpoint of the agentmanager microservice.
    ingressPrefix: "agentmanager"
    #minTargetReplicas: 1
  gateway:
    # ingressPrefix is the prefix of the name of the endpoint of the gateway microservice.
    ingressPrefix: "gateway"
    #minTargetReplicas: 1
  eventmanager:
    #minTargetReplicas: 1
  audit: 
    #minTargetReplicas: 1
  toolbox: 
    #minTargetReplicas: 1
  iaa: 
    #minTargetReplicas: 1
  executor: 
    #minTargetReplicas: 1
  orchestrator: 
    #minTargetReplicas: 1
    resources:
      limits:
        cpu: "2"
        memory: "1024Mi"
      requests:
        cpu: "0.3"
        memory: "1024Mi"
  scheduler: 
    #minTargetReplicas: 1
  storage: 
    #minTargetReplicas: 1
  timer: 
    #minTargetReplicas: 1
